"use strict";(()=>{var e={};e.id=570,e.ids=[570],e.modules={2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},1808:e=>{e.exports=require("net")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},4404:e=>{e.exports=require("tls")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},9404:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>m,originalPathname:()=>_,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>p,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var s={};t.r(s),t.d(s,{DELETE:()=>DELETE,GET:()=>GET,PUT:()=>PUT});var o=t(884),i=t(6132),a=t(5798),n=t(699),d=t(4598),u=t(5344);async function GET(e,{params:r}){try{let e=(0,n.j)(),{data:{user:t},error:s}=await e.auth.getUser();if(s||!t)return a.Z.json({error:{code:"UNAUTHORIZED",message:"Authentication required"}},{status:401});let o=await d.s.getBookingById(r.id);if(!o)return a.Z.json({error:{code:"NOT_FOUND",message:"Booking not found"}},{status:404});let{data:i}=await e.from("user_profiles").select("role").eq("id",t.id).single();if(i?.role==="guest"&&o.guest_id!==t.id)return a.Z.json({error:{code:"FORBIDDEN",message:"Access denied"}},{status:403});if(i?.role==="owner"){let{data:r}=await e.from("properties").select("owner_id").eq("id",o.property_id).single();if(r?.owner_id!==t.id)return a.Z.json({error:{code:"FORBIDDEN",message:"Access denied"}},{status:403})}return a.Z.json({data:o})}catch(e){return console.error("Error fetching booking:",e),a.Z.json({error:{code:"INTERNAL_ERROR",message:"Failed to fetch booking"}},{status:500})}}async function PUT(e,{params:r}){try{let t=(0,n.j)(),{data:{user:s},error:o}=await t.auth.getUser();if(o||!s)return a.Z.json({error:{code:"UNAUTHORIZED",message:"Authentication required"}},{status:401});let i=await e.json(),c=u.my.parse({...i,id:r.id}),l=await d.s.getBookingById(r.id);if(!l)return a.Z.json({error:{code:"NOT_FOUND",message:"Booking not found"}},{status:404});let{data:g}=await t.from("user_profiles").select("role").eq("id",s.id).single(),p=!1;if(g?.role==="admin")p=!0;else if(g?.role==="owner"){let{data:e}=await t.from("properties").select("owner_id").eq("id",l.property_id).single();p=e?.owner_id===s.id}else g?.role==="guest"&&(p=l.guest_id===s.id,c.status&&"cancelled"!==c.status&&(p=!1));if(!p)return a.Z.json({error:{code:"FORBIDDEN",message:"Access denied"}},{status:403});if(c.status){let e=u.hy.parse({id:r.id,from_status:l.status,to_status:c.status}),t=await d.s.updateBookingStatus(e);return a.Z.json({data:t})}let m=await d.s.updateBooking(c);return a.Z.json({data:m})}catch(e){if(console.error("Error updating booking:",e),e instanceof Error){if(e.message.includes("conflicts")||e.message.includes("exceeds")||e.message.includes("transition"))return a.Z.json({error:{code:"BOOKING_CONFLICT",message:e.message}},{status:409});return a.Z.json({error:{code:"VALIDATION_ERROR",message:e.message}},{status:400})}return a.Z.json({error:{code:"INTERNAL_ERROR",message:"Failed to update booking"}},{status:500})}}async function DELETE(e,{params:r}){try{let e=(0,n.j)(),{data:{user:t},error:s}=await e.auth.getUser();if(s||!t)return a.Z.json({error:{code:"UNAUTHORIZED",message:"Authentication required"}},{status:401});let o=await d.s.getBookingById(r.id);if(!o)return a.Z.json({error:{code:"NOT_FOUND",message:"Booking not found"}},{status:404});let{data:i}=await e.from("user_profiles").select("role").eq("id",t.id).single(),u=!1;if(i?.role==="admin")u=!0;else if(i?.role==="owner"){let{data:r}=await e.from("properties").select("owner_id").eq("id",o.property_id).single();u=r?.owner_id===t.id}if(!u)return a.Z.json({error:{code:"FORBIDDEN",message:"Access denied"}},{status:403});if(["confirmed","checked_in"].includes(o.status))return a.Z.json({error:{code:"BOOKING_ACTIVE",message:"Cannot delete active booking. Cancel it first."}},{status:400});return await d.s.deleteBooking(r.id),a.Z.json({data:{message:"Booking deleted successfully"}})}catch(e){return console.error("Error deleting booking:",e),a.Z.json({error:{code:"INTERNAL_ERROR",message:"Failed to delete booking"}},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/bookings/[id]/route",pathname:"/api/bookings/[id]",filename:"route",bundlePath:"app/api/bookings/[id]/route"},resolvedPagePath:"/Users/emmanuelbukenya/Projects/Medical Rentals/medical-rentals/app/api/bookings/[id]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:p,headerHooks:m,staticGenerationBailout:f}=c,_="/api/bookings/[id]/route"}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[657,736,465,652,937,344],()=>__webpack_exec__(9404));module.exports=t})();